name: AWS ECS Fargate Deployment

on:
  push:
    branches:
      - dev

env:
  AWS_REGION: us-east-1
  ECR_REPOSITORY: hr-engagement-app
  ECS_CLUSTER: hr-engagement-app-cluster
  ECS_SERVICE: hr-engagement-app-service
  ECS_TASK_DEFINITION: .github/workflows/task-definition.json

jobs:
  deploy:
    name: Deploy to AWS
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          # Build a docker container and push it to ECR
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          echo "image=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT

      - name: Download and clean task definition
        run: |
          aws ecs describe-task-definition --task-definition hr-engagement-app-task --query taskDefinition > task-definition-full.json
          
          # Remove properties that cause warnings
          jq 'del(.taskDefinitionArn, .revision, .status, .requiresAttributes, .compatibilities, .registeredAt, .registeredBy)' task-definition-full.json > task-definition.json
          
          # Verify the cleaned task definition
          cat task-definition.json

      - name: Fill in the new image ID in the Amazon ECS task definition
        id: task-def
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: task-definition.json
          container-name: ${{ env.ECR_REPOSITORY }}
          image: ${{ steps.build-image.outputs.image }}

      - name: Deploy Amazon ECS task definition
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: ${{ steps.task-def.outputs.task-definition }}
          service: ${{ env.ECS_SERVICE }}
          cluster: ${{ env.ECS_CLUSTER }}
          wait-for-service-stability: true

      - name: Add Deployment URL to Summary
        run: |
          # Try to get the ALB DNS name, but don't fail if it's not available
          ALB_DNS=$(aws elbv2 describe-load-balancers --names hr-engagement-app-alb --query 'LoadBalancers[0].DNSName' --output text || echo "Not available yet")
          
          echo "🚀 **Deployment Successful!**" >> $GITHUB_STEP_SUMMARY
          
          if [ "$ALB_DNS" != "Not available yet" ]; then
            echo "🔗 [View your application here](http://$ALB_DNS)" >> $GITHUB_STEP_SUMMARY
            echo "Application URL: http://$ALB_DNS"
          else
            echo "⚠️ Load balancer DNS name not available yet. Check the AWS console for details." >> $GITHUB_STEP_SUMMARY
          fi 