name: Vercel Preview Deployment for Cursor Test Branch

env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

on:
  push:
    branches:
      - cursor_test

jobs:
  Deploy-Preview:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Install Vercel CLI
        run: npm install --global vercel@latest

      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=preview --token=${{ secrets.VERCEL_TOKEN }}

      - name: Build Project Artifacts
        run: vercel build --token=${{ secrets.VERCEL_TOKEN }}

      - name: Deploy Project Artifacts to Vercel
        id: deploy
        run: |
          DEPLOY_URL=$(vercel deploy --prebuilt --token=${{ secrets.VERCEL_TOKEN }} --scope ${{ secrets.VERCEL_ORG_ID }} --confirm)
          echo "DEPLOY_URL=${DEPLOY_URL}" >> $GITHUB_ENV

      - name: Add Deployment URL to Summary
        run: |
          echo "ðŸš€ **Deployment Successful!**" >> $GITHUB_STEP_SUMMARY
          echo "ðŸ”— [View your deployment here](${{ env.DEPLOY_URL }})" >> $GITHUB_STEP_SUMMARY
          echo "Deployment URL: ${{ env.DEPLOY_URL }}"

      - name: Update PR with Deployment URL
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const { data: pullRequest } = await github.pulls.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.payload.pull_request.number
            });

            const newBody = `${pullRequest.body}\n\n**Deployment URL:** [${process.env.DEPLOY_URL}](${process.env.DEPLOY_URL})`;

            await github.pulls.update({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.payload.pull_request.number,
              body: newBody
            }); 
