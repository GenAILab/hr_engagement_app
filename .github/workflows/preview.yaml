name: Vercel Preview Deployment
env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
on:
  push:
    branches:
      - dev
  pull_request:
    branches:
      - dev

jobs:
  Deploy-Preview:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Install Vercel CLI
        run: npm install --global vercel@latest

      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=preview --token=${{ secrets.VERCEL_TOKEN }}

      - name: Build Project Artifacts
        run: vercel build --token=${{ secrets.VERCEL_TOKEN }}

      - name: Deploy Project Artifacts to Vercel
        id: vercel_preview_url
        run: |
          DEPLOY_URL=$(vercel deploy --prebuilt --token=${{ secrets.VERCEL_TOKEN }})
          echo "VERCEL_PREVIEW_URL=$DEPLOY_URL" >> $GITHUB_ENV
          echo "::set-output name=vercel_preview_url::$DEPLOY_URL"

      - name: Output Deployed URL
        run: |
          echo "Deployment URL: $VERCEL_PREVIEW_URL"

      - name: Add Deployment URL to Summary
        run: |
          echo "### üöÄ Vercel Deployment Successful!" >> $GITHUB_STEP_SUMMARY
          echo "üåç Preview URL: [$VERCEL_PREVIEW_URL]($VERCEL_PREVIEW_URL)" >> $GITHUB_STEP_SUMMARY

      - name: Comment on PR with Preview URL
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v3
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            github.issues.createComment({
              issue_number: context.payload.pull_request.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `üöÄ **Vercel Preview Deployment is Ready!**\n\nüåç **Preview URL:** [${{ env.VERCEL_PREVIEW_URL }}](${{ env.VERCEL_PREVIEW_URL }})\n\nClick the link above to view the latest preview of your changes.`
            });
